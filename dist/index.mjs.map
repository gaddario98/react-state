{"version":3,"file":"index.mjs","sources":["../../storage.ts","../../atomStateGenerator.ts","../../generics/loadingState.ts"],"sourcesContent":["import { compress, decompress } from \"lz-string\";\n\nexport let storage = {\n  getItem: async (key: string): Promise<string | null> => {\n    try {\n      if (typeof localStorage === \"undefined\") return null;\n      const compressed = localStorage.getItem(key);\n      if (!compressed) return null;\n\n      const json = decompress(compressed);\n      return json ?? null;\n    } catch (error) {\n      console.error(\"Error getting item:\", error);\n      return null;\n    }\n  },\n\n  setItem: async(key: string, value: string) => {\n    try {\n      if (typeof localStorage === \"undefined\") return;\n      const compressed = compress(value);\n      localStorage.setItem(key, compressed);\n    } catch (error) {\n      console.error(\"Error setting item:\", error);\n    }\n  },\n\n  removeItem: async(key: string) => {\n    try {\n      if (typeof localStorage === \"undefined\") return;\n      localStorage.removeItem(key);\n    } catch (error) {\n      console.error(\"Error removing item:\", error);\n    }\n  },\n};\n\nexport const setCustomStorage = (newStorage: typeof storage) => {\n  storage = newStorage;\n};\n","import { atomWithStorage, createJSONStorage } from \"jotai/utils\";\nimport { useAtom } from \"jotai\";\nimport { storage } from \"./storage\";\n\nexport type AtomGeneratorOptions<T> = {\n  key: string;\n  defaultValue: T;\n  persist?: boolean;\n};\n\nexport const atomStateGenerator = <T>({\n  key,\n  defaultValue,\n  persist = false,\n}: AtomGeneratorOptions<T>) => {\n  const jotaiStorage = createJSONStorage<T>(() => storage); // Storage sincrono valido\n\n  const jotaiAtom = atomWithStorage<T>(key, defaultValue, jotaiStorage);\n\n  const useValue = () => {\n    const [value] = useAtom(jotaiAtom);\n    return value;\n  };\n\n  const useState = () => useAtom(jotaiAtom);\n\n  const useReset = () => {\n    const [, setValue] = useAtom(jotaiAtom);\n    return () => {\n      setValue(defaultValue);\n      if (persist) {\n        storage.removeItem(key);\n      }\n    };\n  };\n\n  return {\n    atom: jotaiAtom,\n    useValue,\n    useState,\n    useReset,\n  };\n};\n","import { atomStateGenerator } from \"../atomStateGenerator\";\n\nconst {\n  atom: loadingAtom,\n  useValue: useLoadingValue,\n  useState: useLoadingState,\n} = atomStateGenerator<boolean>({\n  defaultValue: false,\n  key: \"react-loading-state\",\n  persist: false,\n});\n\nconst useSetLoading = () => {\n  const [, setValue] = useLoadingState();\n  return (val: boolean) => {setValue(val)};\n};\nexport { loadingAtom, useLoadingValue, useLoadingState, useSetLoading };\n"],"names":["storage","getItem","key","localStorage","compressed","json","decompress","error","console","setItem","value","compress","removeItem","setCustomStorage","newStorage","atomStateGenerator","defaultValue","persist","jotaiStorage","createJSONStorage","jotaiAtom","atomWithStorage","useValue","useAtom","useState","useReset","$","_c","setValue","t0","atom","loadingAtom","useLoadingValue","useLoadingState","useSetLoading","val"],"mappings":"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"}